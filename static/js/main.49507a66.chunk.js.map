{"version":3,"sources":["helpers/asyncSetTimeout.js","algorithms/selection-sort.js","algorithms/bubble-sort.js","algorithms/insertion-sort.js","algorithms/merge-sort.js","algorithms/quick-sort-l.js","helpers/randomizeArray.js","components/SortingBar/SortingBar.jsx","components/HomeHeader/AlgorithmDropDown.jsx","components/HomeHeader/InputSizeSlider.jsx","components/HomeHeader/RandomizeButton.jsx","components/HomeHeader/SpeedSlider.jsx","components/HomeHeader/StartButton.jsx","components/HomeHeader/HomeHeader.jsx","components/Home/Home.jsx","App.js","index.js"],"names":["asyncSetTimeout","timeout","Promise","resolve","reject","setTimeout","selectionSort","a","array","setArray","setColorsArray","visualizationSpeed","len","length","i","minIndex","j","newColorsArray","Array","fill","temp","console","log","bubbleSort","concat","insertionSort","currentValue","arr","mergeSort","l","r","mid","Math","floor","it","tempArr","k","mergeSortWrapper","leftIndex","rightIndex","partition","pivot","quickSort","index","quickSortLWrapper","generateRandomizedArray","arraySize","randomizedArray","push","random","SortingBar","props","color","colorCode","style","backgroundColor","borderRadius","AlgorithmDropDown","currentAlgorithm","algorithms","onAlgorithmChange","menu","width","map","algorithm","idx","Item","onClick","overlay","trigger","height","padding","fontWeight","background","display","justifyContent","alignItems","cursor","DownOutlined","InputSizeSlider","onInputSizeChanged","isVisualizing","flexDirection","disabled","defaultValue","min","max","step","handleStyle","borderColor","trackStyle","onChange","RandomizeButton","marginTop","type","icon","RedoOutlined","SpeedSlider","onSpeedChange","StartButton","PlayCircleOutlined","HomeHeader","onRandomize","onStart","align","justify","algo","MainWrapper","styled","div","ArrayWrapper","Home","useState","setIsVisualizing","setRandomizedArray","colorsArray","setVisualizationSpeed","maxItem","setMaxItem","setCurrentAlgorithm","onVisualize","propsObject","nextRandomizedArray","val","item","margin","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49507a66.chunk.js","sourcesContent":["const asyncSetTimeout = ({timeout} = {}) =>{\n    return new Promise((resolve,reject) => setTimeout(() => resolve(), timeout));\n}\n\nexport default asyncSetTimeout;","import asyncSetTimeout from '../helpers/asyncSetTimeout';\n\nconst selectionSort = async ({\n  array,\n  setArray,\n  setColorsArray,\n  visualizationSpeed,\n} = {}) => {\n  //array = array.concat();\n\n  let len = array.length;\n  for (let i = 0; i < len; i++) {\n    let minIndex = i;\n\n    for (let j = i + 1; j < len; j++) {\n      const newColorsArray = new Array(len).fill(0);\n      newColorsArray[i] = 3;//current i is orange\n      newColorsArray[minIndex] = 1;//min value is purple\n      newColorsArray[j] = 2;//the current iterate j value is yellow\n      setColorsArray(newColorsArray);\n      await asyncSetTimeout({ timeout: visualizationSpeed });\n      if (array[minIndex] > array[j]) {\n        minIndex = j;\n      }\n    }\n\n    let temp = array[i];\n    array[i] = array[minIndex];\n    array[minIndex] = temp;\n    //array = array.concat();\n    setArray(array);\n    console.log(i);\n  }\n};\n\nexport default selectionSort;\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\n\nconst bubbleSort = async ({\n  array,\n  setArray,\n  setColorsArray,\n  visualizationSpeed,\n} = {}) => {\n  let len = array.length;\n\n  for (let i = 0; i < len - 1; i++) {\n    for (let j = 0; j < len - 1 - i; j++) {\n      let newColorsArray = new Array(len).fill(0);\n      newColorsArray[len - 1 - i] = 3;\n      newColorsArray[j] = 1;\n      newColorsArray[j + 1] = 2;\n      setColorsArray(newColorsArray);\n      await asyncSetTimeout({timeout: visualizationSpeed});\n\n      if (array[j + 1] < array[j]) {\n        let temp = array[j + 1];\n        array[j + 1] = array[j];\n        array[j] = temp;\n\n        array = array.concat();\n        setArray(array);\n      }\n    }\n  }\n};\n\nexport default bubbleSort;\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\n\nconst insertionSort = async ({\n  array,\n  setArray,\n  setColorsArray,\n  visualizationSpeed,\n} = {}) => {\n  let len = array.length;\n\n  for (let i = 1; i < len; i++) {\n    let currentValue = array[i];\n    let j = i - 1;\n\n    while (j >= 0 && array[j] > currentValue) {\n      let newColorsArray = new Array(len).fill(0);\n      newColorsArray[i] = 3;\n      newColorsArray[j] = 2;\n      newColorsArray[j + 1] = 1;\n      setColorsArray(newColorsArray);\n      await asyncSetTimeout({timeout: visualizationSpeed});\n\n      array[j + 1] = array[j];\n      array[j] = currentValue;\n      array = array.concat();\n      setArray(array);\n      j--;\n    }\n  }\n};\n\nexport default insertionSort;\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\n\nlet arr = [];\n\nconst mergeSort = async (\n  l,\n  r,\n  setArray,\n  setColorsArray,\n  visualizationSpeed\n) => {\n  if (l >= r) return;\n\n  let mid = Math.floor((l + r) / 2);\n  await mergeSort(l, mid, setArray, setColorsArray, visualizationSpeed);\n  await mergeSort(mid + 1, r, setArray, setColorsArray, visualizationSpeed);\n\n  let i = l;\n  let j = mid + 1;\n  let it = 0;\n  let tempArr = new Array(r - l + 1);\n  let newColorsArray = new Array(arr.length).fill(0);\n\n  while (i <= mid && j <= r) {\n    newColorsArray = new Array(arr.length).fill(0);\n    newColorsArray[i] = 2;\n    newColorsArray[j] = 2;\n    setColorsArray(newColorsArray.concat());\n    await asyncSetTimeout({timeout: visualizationSpeed});\n\n    if (arr[i] > arr[j]) {\n      tempArr[it] = arr[j];\n      j++;\n    } else {\n      tempArr[it] = arr[i];\n      i++;\n    }\n\n    it++;\n  }\n\n  while (i <= mid) {\n    newColorsArray = new Array(arr.length).fill(0);\n    newColorsArray[i] = 2;\n    newColorsArray[j] = 2;\n    setColorsArray(newColorsArray.concat());\n    await asyncSetTimeout({timeout: visualizationSpeed});\n\n    tempArr[it] = arr[i];\n    it++;\n    i++;\n  }\n\n  while (j <= r) {\n    newColorsArray = new Array(arr.length).fill(0);\n    newColorsArray[i] = 2;\n    newColorsArray[j] = 2;\n    setColorsArray(newColorsArray.concat());\n    await asyncSetTimeout({timeout: visualizationSpeed});\n\n    tempArr[it] = arr[j];\n    it++;\n    j++;\n  }\n\n  it = 0;\n  for (let k = l; k <= r; k++, it++) {\n    arr[k] = tempArr[it];\n    newColorsArray = new Array(arr.length).fill(0);\n    newColorsArray[k] = 1;\n    newColorsArray[i - 1] = 2;\n    newColorsArray[j - 1] = 2;\n    setArray(arr.concat());\n    setColorsArray(newColorsArray.concat());\n    await asyncSetTimeout({timeout: visualizationSpeed});\n  }\n};\n\nconst mergeSortWrapper = async ({\n  array,\n  leftIndex,\n  rightIndex,\n  setArray,\n  setColorsArray,\n  visualizationSpeed,\n}) => {\n  arr = array.concat();\n\n  await mergeSort(\n    leftIndex,\n    rightIndex,\n    setArray,\n    setColorsArray,\n    visualizationSpeed\n  );\n};\n\nexport default mergeSortWrapper;\n","import asyncSetTimeout from '../helpers/asyncSetTimeout';\n\nlet arr = [];\n\nconst partition = async (\n  leftIndex,\n  rightIndex,\n  setArray,\n  setColorsArray,\n  visualizationSpeed\n) => {\n  let i = leftIndex - 1;\n  let pivot = arr[rightIndex];\n  let newColorsArray = new Array(arr.length).fill(0);\n  newColorsArray[rightIndex] = 3;\n  setColorsArray(newColorsArray);\n  await asyncSetTimeout({timeout: visualizationSpeed});\n\n  for (let j = leftIndex; j < rightIndex; j++) {\n    newColorsArray = new Array(arr.length).fill(0);\n    newColorsArray[i] = 2;\n    newColorsArray[j] = 2;\n    newColorsArray[rightIndex] = 3;\n    setColorsArray(newColorsArray.concat());\n    await asyncSetTimeout({timeout: visualizationSpeed});\n    if (arr[j] <= pivot) {\n      i = i + 1;\n\n      newColorsArray = new Array(arr.length).fill(0);\n      newColorsArray[i] = 1;\n      newColorsArray[j] = 2;\n      newColorsArray[rightIndex] = 3;\n      setColorsArray(newColorsArray.concat());\n      await asyncSetTimeout({timeout: visualizationSpeed * 1.5});\n\n      let temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      setArray(arr.concat());\n    }\n  }\n\n  let temp = arr[i + 1];\n  arr[i + 1] = arr[rightIndex];\n  arr[rightIndex] = temp;\n  setArray(arr.concat());\n  setColorsArray(new Array(arr.length).fill(0));\n  await asyncSetTimeout({timeout: visualizationSpeed});\n  return i + 1;\n};\n\nconst quickSort = async ({\n  leftIndex,\n  rightIndex,\n  setArray,\n  setColorsArray,\n  visualizationSpeed,\n} = {}) => {\n  if (leftIndex < rightIndex) {\n    let index = await partition(\n      leftIndex,\n      rightIndex,\n      setArray,\n      setColorsArray,\n      visualizationSpeed\n    );\n    await quickSort({\n      leftIndex: leftIndex,\n      rightIndex: index - 1,\n      setArray: setArray,\n      setColorsArray: setColorsArray,\n      visualizationSpeed: visualizationSpeed,\n    });\n    await quickSort({\n      leftIndex: index + 1,\n      rightIndex: rightIndex,\n      setArray: setArray,\n      setColorsArray: setColorsArray,\n      visualizationSpeed: visualizationSpeed,\n    });\n  }\n};\n\nconst quickSortLWrapper = async ({\n  array,\n  leftIndex,\n  rightIndex,\n  setArray,\n  setColorsArray,\n  visualizationSpeed,\n} = {}) => {\n  arr = [];\n  arr = array.concat();\n  await quickSort({\n    leftIndex: leftIndex,\n    rightIndex: rightIndex,\n    setArray: setArray,\n    setColorsArray: setColorsArray,\n    visualizationSpeed: visualizationSpeed,\n  });\n};\nexport default quickSortLWrapper;\n","const generateRandomizedArray = ({arraySize} = {}) =>{\n    let randomizedArray = [];\n\n    for(let i = 0; i < arraySize;i++){\n        randomizedArray.push(Math.floor(Math.random() * (300 - 20) + 20));\n    }\n    return randomizedArray;\n}\n\nexport default generateRandomizedArray;","import React from 'react';\n\nconst SortingBar = (props) => {\n  let color = '#efefef';\n\n  switch (props.colorCode) {\n    case 1:\n      color = 'purple';\n      break;\n    case 2:\n      color = 'yellow';\n      break;\n    case 3:\n      color = 'orange';\n      break;\n    default:\n      break;\n  }\n\n  return <div style={{...props.style, backgroundColor: color,borderRadius:'1rem'}}></div>;\n};\n\nexport default SortingBar;\n","import React from 'react';\nimport {Menu, Dropdown} from 'antd';\nimport {DownOutlined} from '@ant-design/icons';\n\nconst AlgorithmDropDown = ({\n  currentAlgorithm,\n  algorithms,\n  onAlgorithmChange,\n}) => {\n  const width = 150;\n\n  const menu = (\n    <Menu style={{width: width,borderRadius:'1rem'}}>\n      {algorithms.map(function (algorithm, idx) {\n        return (\n          <Menu.Item key={idx} onClick={() => onAlgorithmChange(algorithm)}>\n            {algorithm}\n          </Menu.Item>\n        );\n      })}\n    </Menu>\n  );\n  return (\n    <Dropdown overlay={menu} trigger={['click']}>\n      <div\n        style={{\n          height: '2rem',\n          width: width,\n          padding: '0.6rem',\n          fontWeight: 'bold',\n          background: '#1233c7',\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center',\n          cursor: 'pointer',\n          borderRadius:'1rem'\n        }}\n      >\n        {currentAlgorithm} <DownOutlined />\n      </div>\n    </Dropdown>\n  );\n};\n\nexport default AlgorithmDropDown;\n","import {Slider} from 'antd';\nimport React from 'react';\n\nconst InputSizeSlider = ({onInputSizeChanged, isVisualizing}) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <div style={{color: '#1233c7', fontWeight: 'bold'}}>Array Size</div>\n      <Slider\n        disabled={isVisualizing}\n        defaultValue={30}\n        min={30}\n        max={100}\n        step={2}\n        style={{width: '12rem'}}\n        handleStyle={{borderColor: '#1233c7'}}\n        trackStyle={{background: '#1233c7'}}\n        onChange={onInputSizeChanged}\n      />\n    </div>\n  );\n};\n\nexport default InputSizeSlider;\n","import React from 'react';\nimport {Button} from 'antd';\nimport {RedoOutlined} from '@ant-design/icons';\n\nconst RandomizeButton = ({onClick}) => {\n  return (\n    <div style={{marginTop: 8}}>\n      <Button\n        type=\"primary\"\n        style={{\n          width: '8rem',\n          background: '#1233c7',\n          borderColor: '#1233c7',\n          fontWeight: 'bold',\n          borderRadius:'1rem'\n        }}\n        icon={<RedoOutlined />}\n        onClick={onClick}\n      >\n        Randomize\n      </Button>\n    </div>\n  );\n};\n\nexport default RandomizeButton;\n","import {Slider} from 'antd';\nimport React from 'react';\n\nconst SpeedSlider = ({onSpeedChange, isVisualizing}) => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n      }}\n    >\n      <div style={{color: '#1233c7', fontWeight: 'bold'}}>\n        Visualization Speed\n      </div>\n      <Slider\n        disabled={isVisualizing}\n        defaultValue={30}\n        style={{width: '14rem'}}\n        handleStyle={{borderColor: '#c1c27a'}}\n        trackStyle={{background: '#1233c7'}}\n        onChange={onSpeedChange}\n      />\n    </div>\n  );\n};\n\nexport default SpeedSlider;\n","import React from 'react';\nimport {Button} from 'antd';\nimport {PlayCircleOutlined} from '@ant-design/icons';\n\nconst StartButton = ({onClick}) => {\n  return (\n    <div style={{marginTop: 8}}>\n      <Button\n        type=\"primary\"\n        style={{\n          width: '8rem',\n          background: '#1233c7',\n          borderColor: '#1233c7',\n          fontWeight: 'bold',\n          borderRadius:'1rem'\n        }}\n        icon={<PlayCircleOutlined />}\n        onClick={onClick}\n      >\n        Start\n      </Button>\n    </div>\n  );\n};\n\nexport default StartButton;\n","import { Row } from 'antd';\nimport React from 'react';\nimport AlgorithmDropDown from './AlgorithmDropDown';\nimport InputSizeSlider from './InputSizeSlider';\nimport RandomizeButton from './RandomizeButton';\nimport SpeedSlider from './SpeedSlider';\nimport StartButton from './StartButton';\n\nconst HomeHeader = ({\n  algorithms,\n  onAlgorithmChange,\n  currentAlgorithm,\n  onSpeedChange,\n  onInputSizeChanged,\n  onRandomize,\n  onStart,\n  isVisualizing,\n}) => {\n\n  return (\n    <Row\n      style={{\n        background: '#181818',\n        color: 'white',\n        padding: '0.6rem 0 0.6rem 0',\n        width: '100%',\n      }}\n      align=\"middle\"\n      justify=\"space-around\"\n    >\n      <AlgorithmDropDown\n        currentAlgorithm={currentAlgorithm}\n        algorithms={algorithms}\n        onAlgorithmChange={(algo) => onAlgorithmChange(algo)}\n      />\n      <SpeedSlider\n        onSpeedChange={onSpeedChange}\n        isVisualizing={isVisualizing}\n      />\n      <InputSizeSlider\n        onInputSizeChanged={onInputSizeChanged}\n        isVisualizing={isVisualizing}\n      />\n      <RandomizeButton onClick={onRandomize} />\n      <StartButton onClick={onStart} />\n    </Row>\n  );\n};\n\nexport default HomeHeader;\n","import React, { useState } from 'react';\n//import algorithms\nimport selectionSort from '../../algorithms/selection-sort';\nimport bubbleSort from '../../algorithms/bubble-sort';\nimport insertionSort from '../../algorithms/insertion-sort';\nimport mergeSortWrapper from '../../algorithms/merge-sort';\nimport quickSortLWrapper from '../../algorithms/quick-sort-l';\n//import helpers and scss\nimport generateRandomizedArray from '../../helpers/randomizeArray';\nimport SortingBar from '../SortingBar/SortingBar';\nimport HomeHeader from '../HomeHeader/HomeHeader';\nimport '../../index.scss';\n\nimport styled from 'styled-components'\n\n\nconst Home = () => {\n  const arraySize = 30;\n  const [isVisualizing, setIsVisualizing] = useState(false);\n  const [randomizedArray, setRandomizedArray] = useState(\n    generateRandomizedArray({ arraySize: arraySize })\n  );\n  const [colorsArray, setColorsArray] = useState(\n    new Array(randomizedArray.length).fill(0)\n  );\n  const [visualizationSpeed, setVisualizationSpeed] = useState(30);\n  const [maxItem, setMaxItem] = useState(Math.max(...randomizedArray));\n  const [currentAlgorithm, setCurrentAlgorithm] = useState('Merge Sort');\n  const algorithms = [\n    'Bubble Sort',\n    'Insertion Sort',\n    'Selection Sort',\n    'QuickSort (L)',\n    'Merge Sort',\n  ];\n\n  const onRandomize = () => {\n    if (isVisualizing) return;\n    const nextRandomizedArray = generateRandomizedArray({\n      arraySize: randomizedArray.length,\n    });\n    setRandomizedArray(nextRandomizedArray);\n    setMaxItem(Math.max(...nextRandomizedArray));\n  };\n  const onInputSizeChanged = (val) => {\n    if (isVisualizing) return;\n    const nextRandomizedArray = generateRandomizedArray({ arraySize: val });\n    setRandomizedArray(nextRandomizedArray);\n    setMaxItem(Math.max(...nextRandomizedArray));\n    setColorsArray(new Array(nextRandomizedArray.length).fill(0));\n  };\n  const onSpeedChange = (val) => {\n    if (isVisualizing) return;\n    setVisualizationSpeed(100 - val + 1);\n  };\n\n  const onVisualize = async () => {\n    if (isVisualizing) return;\n\n    setIsVisualizing(true);\n    let propsObject = {\n      array: randomizedArray,\n      setArray: setRandomizedArray,\n      visualizationSpeed: visualizationSpeed,\n      setColorsArray: setColorsArray,\n    }\n    switch (currentAlgorithm) {\n      case 'Selection Sort':\n        await selectionSort(propsObject);\n        break;\n\n      case 'Bubble Sort':\n        await bubbleSort(propsObject);\n        break;\n\n      case 'Insertion Sort':\n        await insertionSort(propsObject);\n        break;\n\n      case 'QuickSort (L)':\n        await quickSortLWrapper({\n          ...propsObject, leftIndex: 0,\n          rightIndex: randomizedArray.length - 1\n        });\n        break;\n      case 'Merge Sort':\n        await mergeSortWrapper(\n          {\n            ...propsObject, leftIndex: 0,\n            rightIndex: randomizedArray.length - 1\n          });\n        break;\n\n      default:\n        break;\n    }\n\n    setIsVisualizing(false);\n  };\n\n  return (\n    <MainWrapper>\n      <HomeHeader\n        algorithms={algorithms}\n        onAlgorithmChange={setCurrentAlgorithm}\n        currentAlgorithm={currentAlgorithm}\n        onRandomize={onRandomize}\n        onInputSizeChanged={onInputSizeChanged}\n        onSpeedChange={onSpeedChange}\n        onStart={onVisualize}\n        isVisualizing={isVisualizing}\n      />\n      <ArrayWrapper>\n        {randomizedArray.map((item, index) => {\n          const height = (item / maxItem) * 80;\n          const width = (1 / randomizedArray.length) * 70;\n          return (\n            <div\n              key={index}\n              style={{\n                height: '100%',\n                display: 'flex',\n                alignItems: 'end',\n                width: `${width}%`,\n              }}\n            >\n              <SortingBar\n                colorCode={colorsArray[index]}\n                style={{\n                  height: `calc(${height}% - 20px)`,\n                  width: '100%',\n                  margin: 'auto 10% 0 10%',\n                }}\n              ></SortingBar>\n            </div>\n          );\n        })}\n      </ArrayWrapper>\n    </MainWrapper>\n  );\n};\n\nconst MainWrapper = styled.div`\n  display: flex;\n  flex-flow:column nowrap;\n  height:100vh\n`\nconst ArrayWrapper = styled.div`\nbackground-color: #1233c7;\ndisplay:flex;\nheight:100%;\nwidth:100%;\nflex-flow:row nowrap;\nalign-items: end;\npadding: 0 0 5rem 25%;\n`\n\nexport default Home;\n","import React from 'react';\nimport Home from './components/Home/Home';\n\nconst App = () => {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}